name: Release Python Package

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    name: Build and Release Python Package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.1.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build package
        run: poetry build

      - name: Determine version and prerelease
        id: version_check
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          VERSION="${TAG_NAME#v}"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

          if [[ "$TAG_NAME" == *"a"* || "$TAG_NAME" == *"b"* || "$TAG_NAME" == *"rc"* || "$TAG_NAME" == *"+"* ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_OUTPUT
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          prerelease: ${{ steps.version_check.outputs.IS_PRERELEASE }}
          generate_release_notes: true
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Publish to PyPI
        if: steps.version_check.outputs.IS_PRERELEASE == 'false'
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry publish --no-interaction --username __token__ --password ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
